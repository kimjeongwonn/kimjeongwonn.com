{"componentChunkName":"component---src-templates-blog-post-js","path":"/자바스크립트의-핵심-실행컨텍스트/","result":{"data":{"site":{"siteMetadata":{"title":"kimjeongwonn"}},"markdownRemark":{"id":"4e5c9495-b627-563a-a44d-48e23e2bb268","excerpt":"자바스크립트를 공부하면서 개인적으로 자바스크립트에서 가장 중요한 개념을 꼽자면 를 꼽는다. 자바스크립트의 핵심 개념들을 나열 해 보라고 한다면 보통 프로토타입, this…","html":"<p>자바스크립트를 공부하면서 개인적으로 자바스크립트에서 가장 중요한 개념을 꼽자면 <code class=\"language-text\">실행 컨텍스트</code>를 꼽는다. 자바스크립트의 핵심 개념들을 나열 해 보라고 한다면 보통 프로토타입, this 바인딩, 호이스팅, 렉시컬 스코프, 클로저, 이벤트 루프등을 떠올릴 수 있고 그 중에서도 앞의 개념들을 관통하는 가장 핵심적인 개념이 <code class=\"language-text\">실행 컨텍스트</code>이다.</p>\n<h2>실행 환경</h2>\n<p>실행 컨텍스트(EC: Execution Context)는 실행 컨텍스트 스택에서 구성된다. 그리고 모든 코드는 EC 안에서 작동한다. 코드가 평가되기 위해서 자바스크립트 엔진은 EC를 생성한 뒤 코드를 평가하는데 EC가 생성되는 상황은 크게 세가지가 있다.</p>\n<ol>\n<li>전역 코드의 실행 → 전역 EC 생성</li>\n<li>함수의 실행 → 함수 EC 생성</li>\n<li><code class=\"language-text\">eval</code>코드의 실행 → eval EC 생성</li>\n</ol>\n<p>당연한 얘기지만 자바스크립트 코드를 실행하면 먼저 전역 코드를 실행하기 때문에 반드시 전역 실행 콘텍스트가 생성된다.</p>\n<blockquote>\n<p>실행 컨텍스트 스택과 콜 스택은 같은 의미이다.</p>\n</blockquote>\n<p>EC가 생성되면 생성 단계와 실행 단계를 거친 뒤 코드를 실행하게 된다.</p>\n<p>-작성중-</p>","frontmatter":{"title":"자바스크립트의 핵심 '실행 컨텍스트'","date":null,"description":null}},"previous":{"fields":{"slug":"/자바스크립트-동등비교연산자-(==)/"},"frontmatter":{"title":"자바스크립트 동등비교연산자 (==)"}},"next":null},"pageContext":{"id":"4e5c9495-b627-563a-a44d-48e23e2bb268","previousPostId":"5132311a-c04e-52d8-93a0-d745daef7f09","nextPostId":null}},"staticQueryHashes":["2841359383"]}