{"version":3,"file":"component---src-pages-index-js-d9c1f49846d5ee6ebaf9.js","mappings":"uJAuDA,IA7CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAO,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBE,OAExC,OADAC,QAAQC,IAAIH,GAEV,uBAAKI,UAAU,OACZJ,GACC,0BACGK,OAAOC,QAAQN,GAASO,KAAI,gBAAEC,EAAF,KAAQC,EAAR,YAC3B,sBAAIC,IAAKF,GACP,qBAAGG,IAAI,sBAAsBC,KAAMH,EAAKI,OAAO,UAC5CL,SAMVX,MAAAA,OAAA,EAAAA,EAAQW,OACP,0CACgB,8BAASX,EAAOW,MAAe,KAC5CX,MAAAA,OAAA,EAAAA,EAAQiB,UAAW,KAFtB,W,kFCkBR,UAzDkB,SAAC,GAAwB,IAAD,EAArBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,GAAY,UAAArB,EAAKG,KAAKC,oBAAV,eAAwBkB,QAAxB,QACZC,EAAQvB,EAAKwB,kBAAkBC,MACrC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,wCAMJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMX,KAAI,SAAAiB,GACTtB,QAAQC,IAAIqB,EAAKC,YAAYC,aAC7BxB,QAAQC,IAAIqB,EAAKG,SACjB,IAAMV,EAAQO,EAAKC,YAAYR,OAASO,EAAKI,OAAOC,KAC9CC,EAAgB,IAAIC,KACxBP,EAAKC,YAAYO,MACjBC,qBAEF,OACE,sBAAIvB,IAAKc,EAAKI,OAAOC,MACnB,2BACEzB,UAAU,iBACV8B,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YACX,gBAAC,EAAAC,KAAD,CAAMC,GAAId,EAAKI,OAAOC,KAAMO,SAAS,OAClCnB,IAGL,wBAAMsB,SAAUf,EAAKC,YAAYO,MAAOF,IAE1C,+BACE,qBACEU,wBAAyB,CACvBC,OAAQjB,EAAKC,YAAYC,aAAeF,EAAKG,SAE/CS,SAAS","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport * as React from \"react\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n            velog\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const socials = data.site.siteMetadata?.social\n  console.log(socials)\n  return (\n    <div className=\"bio\">\n      {socials && (\n        <ul>\n          {Object.entries(socials).map(([name, url]) => (\n            <li key={name}>\n              <a rel=\"noreferrer noopener\" href={url} target=\"_blank\">\n                {name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      )}\n      {author?.name && (\n        <p>\n          프론트엔드 개발 공부중인 <strong>{author.name}</strong>{\" \"}\n          {author?.summary || null}입니다.\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>게시물이 없습니다.</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          console.log(post.frontmatter.description)\n          console.log(post.excerpt)\n          const title = post.frontmatter.title || post.fields.slug\n          const formattedDate = new Date(\n            post.frontmatter.date\n          ).toLocaleDateString()\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2 itemProp=\"headline\">\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      {title}\n                    </Link>\n                  </h2>\n                  <time dateTime={post.frontmatter.date}>{formattedDate}</time>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(truncate: true, pruneLength: 120, format: MARKDOWN)\n        fields {\n          slug\n        }\n        frontmatter {\n          date\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","socials","social","console","log","className","Object","entries","map","name","url","key","rel","href","target","summary","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","style","listStyle","post","frontmatter","description","excerpt","fields","slug","formattedDate","Date","date","toLocaleDateString","itemScope","itemType","itemProp","Link","to","dateTime","dangerouslySetInnerHTML","__html"],"sourceRoot":""}