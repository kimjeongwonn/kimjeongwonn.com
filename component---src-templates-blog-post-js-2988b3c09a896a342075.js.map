{"version":3,"file":"component---src-templates-blog-post-js-2988b3c09a896a342075.js","mappings":"uJA0CA,IAhCY,WAAO,IAAD,EAkBVA,EAAM,WAjBCC,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,QACZJ,MAAAA,OAAA,EAAAA,EAAQK,OACP,0CACgB,8BAASL,EAAOK,MAAe,KAC5CL,MAAAA,OAAA,EAAAA,EAAQM,UAAW,KAFtB,W,kFCgCR,UA1DyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKL,KAAKC,oBAAV,eAAwBS,QAAxB,QACVC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KACZC,EAAgB,IAAIC,KAAKP,EAAKQ,YAAYC,MAAMC,qBAEtD,OACE,gBAAC,IAAD,CAAQX,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKQ,YAAYL,MACxBQ,YAAaX,EAAKQ,YAAYG,aAAeX,EAAKY,UAEpD,2BACEjB,UAAU,YACVkB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYf,EAAKQ,YAAYL,OAC1C,wBAAMa,SAAUhB,EAAKQ,YAAYC,MAAOH,IAE1C,2BACEW,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCJ,SAAS,gBAEX,2BACA,gCAEF,uBAAKpB,UAAU,iBACb,sBACEyB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGrB,GACC,gBAAC,EAAAsB,KAAD,CAAMC,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAApC,KACK1B,EAASI,YAAYL,QAI9B,0BACGE,GACC,gBAAC,EAAAqB,KAAD,CAAMC,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKG,YAAYL,MADpB","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport * as React from \"react\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          프론트엔드 개발 공부중인 <strong>{author.name}</strong>{\" \"}\n          {author?.summary || null}입니다.\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const formattedDate = new Date(post.frontmatter.date).toLocaleDateString()\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <time dateTime={post.frontmatter.date}>{formattedDate}</time>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>{/* <Bio /> */}</footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","data","location","post","markdownRemark","siteTitle","title","previous","next","formattedDate","Date","frontmatter","date","toLocaleDateString","description","excerpt","itemScope","itemType","itemProp","dateTime","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}