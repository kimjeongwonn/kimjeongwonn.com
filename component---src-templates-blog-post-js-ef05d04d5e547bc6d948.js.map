{"version":3,"file":"component---src-templates-blog-post-js-ef05d04d5e547bc6d948.js","mappings":"oMAEe,SAASA,EAAT,GAA4B,IAATC,EAAQ,EAARA,KAC1BC,GAAeC,EAAAA,EAAAA,UAiBrB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAa,CACjBC,IAAK,gCACLR,KAAAA,EACA,aAAc,QACdS,MAAO,UACPC,MAAO,eACPC,YAAa,YACbC,MAAO,QAETC,OAAOC,QAAQP,GAAYQ,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDb,EAAWc,aAAaF,EAAKC,MAE/BhB,EAAakB,QAAQC,YAAYhB,KAChC,CAACJ,IACG,uBAAKqB,GAAG,UAAUC,IAAKrB,I,wBC+ChC,EA7DyB,SAAC,GAAwB,IAAD,EAArBsB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACZC,EAAgB,IAAIC,KAAKT,EAAKU,YAAYC,MAAMC,qBAEtD,OACE,gBAAC,IAAD,CAAQb,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAD,CACEG,MAAOL,EAAKU,YAAYL,MACxBQ,YAAab,EAAKU,YAAYG,aAAeb,EAAKc,UAEpD,2BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYlB,EAAKU,YAAYL,OAC1C,wBAAMc,SAAUnB,EAAKU,YAAYC,MAAOH,IAE1C,2BACEY,wBAAyB,CAAEC,OAAQrB,EAAKsB,MACxCJ,SAAS,gBAEX,2BACA,gCAEF,uBAAKH,UAAU,iBACb,sBACEQ,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGtB,GACC,gBAAC,EAAAuB,KAAD,CAAMC,GAAIxB,EAASyB,OAAOC,KAAMC,IAAI,QAApC,KACK3B,EAASI,YAAYL,QAI9B,0BACGE,GACC,gBAAC,EAAAsB,KAAD,CAAMC,GAAIvB,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKG,YAAYL,MADpB,SAOR,8BACE,gBAAC/B,EAAD,CAASC,KAAK","sources":["webpack://gatsby-starter-blog/./src/components/comment.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\"\n\nexport default function Comment({ repo }) {\n  const containerRef = useRef()\n  useEffect(() => {\n    const utterances = document.createElement(\"script\")\n    const attributes = {\n      src: \"https://utteranc.es/client.js\",\n      repo,\n      \"issue-term\": \"title\",\n      label: \"comment\",\n      theme: \"github-light\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    }\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n    containerRef.current.appendChild(utterances)\n  }, [repo])\n  return <div id=\"comment\" ref={containerRef} />\n}\n","import { graphql, Link } from \"gatsby\"\nimport * as React from \"react\"\nimport Comment from \"../components/comment\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const formattedDate = new Date(post.frontmatter.date).toLocaleDateString()\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <time dateTime={post.frontmatter.date}>{formattedDate}</time>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>{/* <Bio /> */}</footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <footer>\n        <Comment repo=\"kimjeongwonn/kimjeongwonn.github.io\" />\n      </footer>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Comment","repo","containerRef","useRef","useEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","id","ref","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","formattedDate","Date","frontmatter","date","toLocaleDateString","description","excerpt","className","itemScope","itemType","itemProp","dateTime","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}