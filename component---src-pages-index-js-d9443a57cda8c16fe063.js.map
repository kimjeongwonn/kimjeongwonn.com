{"version":3,"file":"component---src-pages-index-js-d9443a57cda8c16fe063.js","mappings":"uJA2CA,IAhCY,WAAO,IAAD,EAkBVA,EAAM,WAjBCC,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,QACZJ,MAAAA,OAAA,EAAAA,EAAQK,OACP,0CACgB,8BAASL,EAAOK,MAAe,KAC5CL,MAAAA,OAAA,EAAAA,EAAQM,UAAW,KAFtB,W,kFCiCR,UA5DkB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKL,KAAKC,oBAAV,eAAwBO,QAAxB,QACZC,EAAQJ,EAAKK,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAC9CC,EAAgB,IAAIC,KACxBL,EAAKC,YAAYK,MACjBC,qBAEF,OACE,sBAAIC,IAAKR,EAAKE,OAAOC,MACnB,2BACEjB,UAAU,iBACVuB,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIZ,EAAKE,OAAOC,KAAMU,SAAS,OACnC,wBAAMA,SAAS,YAAYrB,KAG/B,wBAAMsB,SAAUd,EAAKC,YAAYK,MAAOF,IAE1C,+BACE,qBACEW,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB,SAE/CL,SAAS","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          프론트엔드 개발 공부중인 <strong>{author.name}</strong>{\" \"}\n          {author?.summary || null}입니다.\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const formattedDate = new Date(\n            post.frontmatter.date\n          ).toLocaleDateString()\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <time dateTime={post.frontmatter.date}>{formattedDate}</time>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","data","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","formattedDate","Date","date","toLocaleDateString","key","itemScope","itemType","Link","to","itemProp","dateTime","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}